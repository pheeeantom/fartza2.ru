{"version":3,"file":"src_client_components_nav_nav_bar_js.bundle.js","mappings":"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","sources":["webpack://fartza.ru/./src/client/components/nav/links.js","webpack://fartza.ru/./src/client/components/nav/logreg.js","webpack://fartza.ru/./src/client/components/nav/nav.js","webpack://fartza.ru/./src/client/components/nav/nav_bar.js"],"sourcesContent":["export let links = [\r\n    \"Новые\",\r\n    \"Подписки\",\r\n    \"Популярные\",\r\n    \"Ближайшие\"\r\n];","import React, { useState } from \"react\";\r\n\r\nfunction LogReg(props) {\r\n\r\n    const [logout, setLogout] = useState(false);\r\n    const [confirm, setConfirm] = useState(null);\r\n    const [nick, setNick] = useState(null);\r\n\r\n    //this.state = {logout: false, confirm: null, nick: null};\r\n\r\n    //componentDidMount() {\r\n        /*fetch('/api', {\r\n              method: 'POST',\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n              body: JSON.stringify({ command: 'isLoggedIn' })\r\n          }).then(response => {\r\n              response.json().then(body => {\r\n                  this.setState({logout: body.logout, confirm: body.confirm, nick: body.nick});\r\n              });\r\n          });*/\r\n    //}\r\n        //console.log(this.state);\r\n    //if (!logout) {\r\n      return (\r\n        <>\r\n          <br className=\"lg:hidden\"/>\r\n          <li className=\"inline-block align-middle mt-1 md:mt-3 lg:mt-0 py-1 px-2 lg:ml-20 w-auto bg-white hover:bg-neutral-200\"><button className=\"text-black text-lg\">Вход/Регистрация</button></li>\r\n        </>\r\n      );\r\n    //}\r\n    /*else {\r\n      return (\r\n        <div className=\"dropdown d-block d-sm-block d-md-inline-block px-3\">\r\n          <button className=\"btn btn-primary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            {nick} {confirm ? \"(осуществлен вход)\" : \"(требуется подтверждение почты)\"}\r\n          </button>\r\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n            {confirm ? <li><a className=\"dropdown-item\" href=\"/goods/create\">Продать</a></li> : ''}\r\n            {confirm ? <li><a className=\"dropdown-item\" href=\"#\">Создано</a></li> : ''}\r\n            <li><a className=\"dropdown-item\" href=\"#\">Настройки</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/logout\">Выйти</a></li>\r\n          </ul>\r\n        </div>\r\n      );*\r\n    }*/\r\n  }\r\n\r\n  export default LogReg;","import React from \"react\";\r\n\r\n//import { connect } from \"react-redux\";\r\nimport { setLastArgs } from \"../../store/reducers/goods_slice\";\r\n//import { goodsAPI } from \"../../store/services/goods_service\";\r\n\r\nimport { links } from \"./links\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction Nav(props) {\r\n    /*constructor(props) {\r\n        super(props);\r\n\r\n        //this.state = { lastArgs: null };\r\n\r\n        // Эта привязка обязательна для работы `this` в колбэке.\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }*/\r\n\r\n    const lastArgs = useSelector((state) => state.goodsReducer.lastArgs)\r\n    const dispatch = useDispatch()\r\n\r\n    function handleClick() {\r\n        let num;\r\n        for (let i = 0; i < links.length; i++) {\r\n            if (props.name == links[i]) {\r\n                num = i;\r\n            }\r\n        }\r\n        props.func(num);\r\n        //let [searchParams, setSearchParams] = useSearchParams();\r\n        //const searchParams = new URLSearchParams(location.search);\r\n        /*let lastArgs = { word: ((searchParams.get('query') && searchParams.get('query').length > 1) ?\r\n\t\t\tsearchParams.get('query') : \"\"), since: 0};*/\r\n        if (props.name == \"Популярные\") {\r\n            /*const url = new URL(window.location);\r\n            url.searchParams.set('sort', 'popular');\r\n            window.history.pushState({}, '', url);\r\n            window.location.reload();*/\r\n            /*searchParams.set('sort', 'popular');\r\n            window.history.replaceState({}, '', `${location.pathname}?${searchParams}`);*/\r\n            /*this.props.sendAPIRequest({ command: 'searchGoods', word: (searchParams.get('query') && searchParams.get('query').length > 1) ? searchParams.get('query') : \"\", since: 0, sort: 'popular' }, '/api', 'POST').then(resolve => {\r\n                if (resolve.body.goods[0].length == 0) {\r\n                this.props.updateGoods('Ничего не найдено!');\r\n                return;\r\n                }\r\n                this.props.updateGoods(resolve.body.goods[0]);\r\n            }).catch(reject => {\r\n                this.props.updateGoods(reject.error);\r\n            });*/\r\n            //this.props.fetchAllGoods({ ...lastArgs, sort: 'popular' });\r\n\t\t\tdispatch(setLastArgs({ ...lastArgs, sort: 'popular', since: 0 }));\r\n        }\r\n        else if (props.name == \"Новые\") {\r\n            /*const url = new URL(window.location);\r\n            url.searchParams.set('sort', 'new');\r\n            window.history.pushState({}, '', url);\r\n            window.location.reload();*/\r\n            //searchParams.set('sort', 'new');\r\n            //window.history.replaceState({}, '', `${location.pathname}?${searchParams}`);\r\n            /*this.props.sendAPIRequest({ command: 'searchGoods', word: (searchParams.get('query') && searchParams.get('query').length > 1) ? searchParams.get('query') : \"\", since: 0, sort: 'new' }, '/api', 'POST').then(resolve => {\r\n                if (resolve.body.goods[0].length == 0) {\r\n                this.props.updateGoods('Ничего не найдено!');\r\n                return;\r\n                }\r\n                this.props.updateGoods(resolve.body.goods[0]);\r\n            }).catch(reject => {\r\n                this.props.updateGoods(reject.error);\r\n            });*/\r\n            //this.props.fetchAllGoods({ ...lastArgs, sort: 'new' });\r\n\t\t\tdispatch(setLastArgs({ ...lastArgs, sort: 'new', since: 0 }));\r\n        }\r\n        else if (props.name == 'Ближайшие') {\r\n            dispatch(setLastArgs({ ...lastArgs, sort: 'distance', since: 0 }));\r\n        }\r\n        else if (props.name == 'Подписки') {\r\n            dispatch(setLastArgs({ ...lastArgs, sort: 'subscriptions', since: 0 }));\r\n        }\r\n    }\r\n\r\n    let className = 'block md:inline-block align-middle px-2 mx-2 md:border-2 rounded-sm hover:border-neutral-300';\r\n    if (props.isActive) {\r\n        className += ' rounded-tl-lg';\r\n    }\r\n    return (\r\n        <li className={className}><button className=\"text-white text-lg hover:text-neutral-300\" onClick={handleClick}>{props.name}</button></li>\r\n    );\r\n}\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n\t\tfetchAllGoodsState: (args) => goodsAPI.endpoints.fetchAllGoods.select(args)(state),\r\n\t\tlastArgs: state.goodsReducer.lastArgs\r\n    };\r\n}*/\r\n\r\nexport default Nav;\r\n\r\n/*const mapDispatchToProps = {\r\n    fetchAllGoods: goodsAPI.endpoints.fetchAllGoods.initiate,//(args) => dispatch(goodsAPI.endpoints.fetchAllGoods.initiate(args)) //(args) => dispatch(getGoodsFromAPI(args))\r\n\tsetLastArgs: setLastArgs\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Nav);*/","import React, { useEffect, useState } from \"react\";\r\n\r\nimport Nav from './nav';\r\nimport LogReg from \"./logreg\";\r\nimport { links } from \"./links\";\r\n\r\n//import '../../styles/output.css';\r\n\r\nfunction NavBar(props){\r\n  /*constructor(props) {\r\n    super(props);\r\n    this.output = this.output.bind(this);\r\n    let active = [true];\r\n    for (let i = 1; i < links.length; i++) {\r\n      active.push(false);\r\n    }\r\n    this.state = {isActive: active};\r\n  }*/\r\n\r\n  const [isActive, setIsActive] = useState([true].concat(Array(links.length - 1).fill(false)))\r\n\r\n  /*componentDidMount() {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    let sort = searchParams.get('sort');\r\n    if (sort == 'popular') {\r\n        let active = [];\r\n        for (let i = 0; i < links.length; i++) {\r\n          active.push(false);\r\n        }\r\n        active[2] = true;\r\n        this.setState({isActive: active});\r\n    }\r\n  }*/\r\n\r\n  /*useEffect(() => {\r\n    const searchParams = new URLSearchParams(location.search);\r\n    let sort = searchParams.get('sort');\r\n    if (sort == 'popular') {\r\n        let active = [];\r\n        for (let i = 0; i < links.length; i++) {\r\n          active.push(false);\r\n        }\r\n        active[2] = true;\r\n        setIsActive(active);\r\n    }\r\n  }, [])*/\r\n\r\n  function output(num) {\r\n    let active = [];\r\n    for (let i = 0; i < links.length; i++) {\r\n      active.push(false);\r\n    }\r\n    active[num] = true;\r\n    setIsActive(active);\r\n  }\r\n    \r\n  let rows = [];\r\n  for (let i = 0; i < links.length; i++) {\r\n    rows.push(<Nav isActive={isActive[i]} name={links[i]} func={output} updateGoods={props.updateGoods} getGoodsFromAPI={props.getGoodsFromAPI} />);\r\n  }\r\n  let tiles;\r\n  if (!props.disableTiles) {\r\n    tiles = (<div className=\"block md:flex-1\">\r\n              <nav className=\"h-full\">\r\n                <ul className=\"text-center lg:text-right\">\r\n  \r\n                  <span>\r\n                    {!props.without && rows}\r\n                    <LogReg/>\r\n                  </span>\r\n  \r\n                </ul>\r\n              </nav>\r\n            </div>);\r\n  }\r\n  return (\r\n    <header className=\"md:flex sticky px-12 py-6 bg-zinc-700 w-full md:relative\">\r\n      <a href=\"/\" className=\"block pb-2 md:pb-0 md:flex-none no-underline text-center md:text-left md:absolute md:top-1/3\">\r\n        <span className=\"text-2xl text-white font-sans\">FARTZA</span>\r\n      </a>\r\n  \r\n      {tiles}\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default NavBar;"],"names":["links","React","useState","LogReg","props","_useState","_useState2","_slicedToArray","logout","setLogout","_useState3","_useState4","confirm","setConfirm","_useState5","_useState6","nick","setNick","createElement","Fragment","className","setLastArgs","useDispatch","useSelector","Nav","lastArgs","state","goodsReducer","dispatch","handleClick","num","i","length","name","func","_objectSpread","sort","since","isActive","onClick","useEffect","NavBar","concat","Array","fill","setIsActive","output","active","push","rows","updateGoods","getGoodsFromAPI","tiles","disableTiles","without","href"],"sourceRoot":""}