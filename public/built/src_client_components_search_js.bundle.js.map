{"version":3,"file":"src_client_components_search_js.bundle.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAA0B;AACW;AACuB;AACD;AACJ;AAEvD,SAASM,MAAMA,CAACC,KAAK,EAAE;EACtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACG;AACH;AACA;AACA;AACA;AACA;AACA;;EAEC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC,IAAMC,QAAQ,GAAGJ,wDAAW,CAAC,CAAC;EAC9B,IAAMK,QAAQ,GAAGJ,wDAAW,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK,CAACC,YAAY,CAACF,QAAQ;EAAA,EAAC;EAEpE,SAASG,QAAQA,CAACC,KAAK,EAAE;IACxB;AACF;AACA;AACA;AACA;IACE,IAAIC,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MACvD;AACH;AACA;MACG;MACA;AACH;AACA;AACA;AACA;AACA;AACA;MACG;MACA;MACAT,QAAQ,CAACN,wEAAW,CAAAgB,aAAA,CAAAA,aAAA,KAAMT,QAAQ;QAAEU,IAAI,EAAEL,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC,CAACC,KAAK;QAAEI,KAAK,EAAE;MAAC,EAAE,CAAC,CAAC;IAChG,CAAC,MACI;MACJ;AACH;AACA;AACA;MACG;MACAZ,QAAQ,CAACN,wEAAW,CAAAgB,aAAA,CAAAA,aAAA,KAAMT,QAAQ;QAAEU,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAE;MAAC,EAAE,CAAC,CAAC;IAC3D;EACD;EAEA,SAASC,aAAaA,CAACR,KAAK,EAAE;IAC7B,IAAIA,KAAK,CAACS,OAAO,IAAI,EAAE,EAAE;MACxBV,QAAQ,CAACC,KAAK,CAAC;IAChB;EACD;;EAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;EAEC;EACC,oBACCb,0DAAA;IAAKwB,SAAS,EAAC;EAAqB,gBACnCxB,0DAAA;IAAKwB,SAAS,EAAC;EAA4B,gBAC1CxB,0DAAA;IAAOyB,EAAE,EAAC,QAAQ;IAACC,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,mCAAU;IAACH,SAAS,EAAC,sDAAsD;IAACI,OAAO,EAAEP;EAAc,CAAE,CAAC,eACjJrB,0DAAA;IAAQwB,SAAS,EAAC,8DAA8D;IAACK,OAAO,EAAEjB;EAAS,GAAE,iCAAc,CAC/G,CACD,CAAC;EAER;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAeN,MAAM,EAAC;;AAEtB","sources":["webpack://fartza.ru/./src/client/components/search.js"],"sourcesContent":["import React from \"react\";\r\nimport { connect} from \"react-redux\";\r\nimport { setLastArgs } from \"../store/reducers/goods_slice\";\r\nimport { goodsAPI } from \"../store/services/goods_service\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction Search(props) {\r\n\t/*constructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.getGoods = this.getGoods.bind(this);\r\n\t\tthis.getGoodsURL = this.getGoodsURL.bind(this);\r\n\t\tthis.getGoodsEnter = this.getGoodsEnter.bind(this);\r\n\t\t//this.reset = this.reset.bind(this);\r\n\t//}\r\n\r\n\t/*componentDidMount() {\r\n\t\tlet searchParams = new URLSearchParams(location.search);\r\n        if (searchParams.get('query') && searchParams.get('query').length > 1) {\r\n        \t/*let params = new URLSearchParams(new URL(window.location.href).search);\r\n\t\t\tlet query;\r\n\t\t\tlet sort;\r\n\t\t\tfor(let pair of params.entries()) {\r\n\t\t\t  if (pair[0] == 'query') {\r\n\t\t\t  \tquery = pair[1];\r\n\t\t\t  }\r\n\t\t\t  else if (pair[0] == 'sort') {\r\n\t\t\t  \tsort = pair[1];\r\n\t\t\t  }\r\n\t\t\t}*/\r\n\t\t\t/*let searchParams = new URLSearchParams(location.search);\r\n\t\t\tlet query = searchParams.get('query');\r\n\t\t\t//let sort = searchParams.get('sort');\r\n        \tdocument.getElementById(\"search\").value = query;\r\n\t\t\t//this.getGoodsURL(query, 0, sort);\r\n\t\t}\r\n    }*/\r\n\r\n\t/*getGoodsURL(query, since, sort) {\r\n\t\t/*fetch('/api', {\r\n\t\t\tmethod: 'POST',\r\n\t\t    headers: {\r\n\t\t      'Accept': 'application/json',\r\n\t\t      'Content-Type': 'application/json'\r\n\t\t    },\r\n\t\t    body: JSON.stringify({ command: 'searchGoods', word: query, since: since, sort: sort })\r\n\t\t}).then(response => {\r\n\t\t\tresponse.json().then(body => {\r\n\t\t\t\tthis.props.updateGoods(body.goods[0]);\r\n\t\t\t});\r\n\t\t});*/\r\n\t\t/*this.props.sendAPIRequest({ command: 'searchGoods', word: query, since: since, sort: sort }, '/api', 'POST').then(resolve => {\r\n\t\t\tif (resolve.body.goods[0].length == 0) {\r\n\t\t\t\tthis.props.updateGoods('Ничего не найдено!');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.props.updateGoods(resolve.body.goods[0]);\r\n\t\t}).catch(reject => {\r\n\t\t\tthis.props.updateGoods(reject.error);\r\n\t\t});*/\r\n\t/*\tsort = sort ?? 'new';\r\n\t\tthis.props.fetchAllGoods({ word: query, since, sort });\r\n\t\tthis.props.setLastArgs({ word: query, since, sort });\r\n\t}\r\n\r\n\t/*getGoods(event) {\r\n\t\tfetch('/api', {\r\n\t\t\tmethod: 'POST',\r\n\t\t    headers: {\r\n\t\t      'Accept': 'application/json',\r\n\t\t      'Content-Type': 'application/json'\r\n\t\t    },\r\n\t\t    body: JSON.stringify({ command: 'searchGoods', word: document.getElementById(\"search\").value, since: 0 })\r\n\t\t}).then(response => {\r\n\t\t\tresponse.json().then(body => {\r\n\t\t\t\temitter.emit(\"CHANGE\", body.goods[0]);\r\n\t\t\t});\r\n\t\t});\r\n\t}*/\r\n\r\n\tconst dispatch = useDispatch()\r\n\tconst lastArgs = useSelector((state) => state.goodsReducer.lastArgs)\r\n\r\n\tfunction getGoods(event) {\r\n\t\t/*const url = new URL(window.location);\r\n\t\turl.searchParams.set('search', 'true');\r\n\t\turl.searchParams.set('query', document.getElementById(\"search\").value);\r\n        url.pathname = \"/\";\r\n\t\twindow.history.pushState({}, '', url);*/\r\n\t\tif (document.getElementById(\"search\").value.length > 1) {\r\n\t\t\t/*let searchParams = new URLSearchParams(location.search);\r\n\t\t\tsearchParams.set('query', document.getElementById(\"search\").value);\r\n\t\t\twindow.history.replaceState({}, '', `${location.pathname}?${searchParams}`);*/\r\n\t\t\t//window.location.reload();\r\n\t\t\t/*let params = new URLSearchParams(new URL(window.location.href).search);\r\n\t\t\tlet sort;\r\n\t\t\tfor(let pair of params.entries()) {\r\n\t\t\t\tif (pair[0] == 'sort') {\r\n\t\t\t\t\tsort = pair[1];\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t//let sort = searchParams.get('sort');\r\n\t\t\t//this.getGoodsURL(document.getElementById(\"search\").value, 0, this.props.lastArgs.sort);\r\n\t\t\tdispatch(setLastArgs({ ...lastArgs, word: document.getElementById(\"search\").value, since: 0 }));\r\n\t\t}\r\n\t\telse {\r\n\t\t\t/*let searchParams = new URLSearchParams(location.search);\r\n\t\t\tsearchParams.set('query', \"\");\r\n\t\t\twindow.history.replaceState({}, '', `${location.pathname}?${searchParams}`);\r\n\t\t\tlet sort = searchParams.get('sort');*/\r\n\t\t\t//this.getGoodsURL(document.getElementById(\"search\").value, 0, this.props.lastArgs.sort);\r\n\t\t\tdispatch(setLastArgs({ ...lastArgs, word: \"\", since: 0 }));\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getGoodsEnter(event) {\r\n\t\tif (event.keyCode == 13) {\r\n\t\t\tgetGoods(event);\r\n\t\t}\r\n\t}\r\n\r\n\t/*reset(event) {\r\n\t\tlet searchParams = new URLSearchParams(location.search);\r\n\t\tsearchParams.set('query', '');\r\n\t\twindow.history.replaceState({}, '', `${location.pathname}?${searchParams}`);\r\n\t\tdocument.getElementById(\"search\").value = \"\";\r\n\t\tlet sort = searchParams.get('sort');\r\n\t\tthis.getGoodsURL(\"\", 0, sort);\r\n\t}*/\r\n\r\n\t//render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"bg-neutral-300 mb-4\">\r\n\t\t\t\t<div className=\"text-center py-4 px-5 flex\">\r\n\t\t\t\t\t<input id=\"search\" type=\"text\" placeholder=\"Найти...\" className=\"w-10 sm:w-auto flex-1 px-2 focus:outline-neutral-400\" onKeyUp={getGoodsEnter} />\r\n\t\t\t\t\t<button className=\"bg-zinc-700 hover:bg-zinc-800 text-white font-sans py-2 px-4\" onClick={getGoods} >Найти!</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t//}\r\n}\r\n\r\n/*const mapStateToProps = (state) => {\r\n    return {\r\n\t\tfetchAllGoodsState: (args) => goodsAPI.endpoints.fetchAllGoods.select(args)(state),\r\n\t\tlastArgs: state.goodsReducer.lastArgs\r\n    };\r\n}*/\r\n/*\r\nconst mapDispatchToProps = {\r\n    fetchAllGoods: goodsAPI.endpoints.fetchAllGoods.initiate,//(args) => dispatch(goodsAPI.endpoints.fetchAllGoods.initiate(args)) //(args) => dispatch(getGoodsFromAPI(args))\r\n\tsetLastArgs: setLastArgs\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Search);\r\n*/\r\n\r\nexport default Search;\r\n\r\n//<button className=\"bg-zinc-700 hover:bg-zinc-800 text-white font-sans py-2 px-4\" onClick={this.reset} >Сбросить</button>"],"names":["React","connect","setLastArgs","goodsAPI","useDispatch","useSelector","Search","props","dispatch","lastArgs","state","goodsReducer","getGoods","event","document","getElementById","value","length","_objectSpread","word","since","getGoodsEnter","keyCode","createElement","className","id","type","placeholder","onKeyUp","onClick"],"sourceRoot":""}